rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection
    match /users/{userId} {
      // Users can read and write their own document
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // All authenticated users can read other user profiles
      allow read: if request.auth != null;
    }
    
    // Posts collection
    match /posts/{postId} {
      // Anyone can read posts
      allow read: if request.auth != null;
      // Only authenticated users can create posts
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.authorId;
      // Only post author can update/delete their posts
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.authorId;
      // Any authenticated user can update likes field only
      allow update: if request.auth != null &&
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['likes', 'updatedAt']);
        
      // Comments subcollection
      match /comments/{commentId} {
        // Anyone can read comments
        allow read: if request.auth != null;
        // Only authenticated users can create comments
        allow create: if request.auth != null &&
          request.auth.uid == request.resource.data.authorId;
        // Only comment author can update/delete their comments
        allow update, delete: if request.auth != null &&
          request.auth.uid == resource.data.authorId;
        // Any authenticated user can update likes field only
        allow update: if request.auth != null &&
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['likes', 'updatedAt']);
      }
    }
    
    // Follow relationships
    match /follows/{followId} {
      // Anyone can read follow relationships (for public follower lists)
      allow read: if request.auth != null;
      // Only authenticated users can create follows (must be the follower)
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.followerId;
      // Only the follower can delete their own follow relationships
      allow delete: if request.auth != null && 
        request.auth.uid == resource.data.followerId;
    }
    
    // User statistics
    match /user_stats/{userId} {
      // Anyone can read user stats (for public profiles)
      allow read: if request.auth != null;
      // Only system/server can write user stats (managed by Cloud Functions or server-side)
      // For now, allow authenticated users to write their own stats
      allow write: if request.auth != null;
    }
    
    // Notifications (future implementation)
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }
  }
}
